@page "/login"
@using GloboClimaSPA.Models
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.JSInterop
@using GloboClimaSPA.Interfaces
@inject IAuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (loginFailed)
{
    <div class="alert alert-danger">
        Invalid email or password.
    </div>
}

@code {
    private LoginModel loginModel = new LoginModel();
    private bool loginFailed = false;
    private async Task HandleLogin()
    {
        loginFailed = false;

        var success = await AuthService.LoginUserAsync(loginModel.Email, loginModel.Password);
        if (success)
        {
            Navigation.NavigateTo("/");  // Redirect to a different page after successful login
        }
        else
        {
            loginFailed = true;
        }
    }
}